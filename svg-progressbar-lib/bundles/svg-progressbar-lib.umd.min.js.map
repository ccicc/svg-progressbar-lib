{"version":3,"sources":["ng://svg-progressbar-lib/lib/svg-progressbar-lib.service.ts","ng://svg-progressbar-lib/lib/svg-progressbar-lib.config.ts","ng://svg-progressbar-lib/lib/svg-progressbar-lib.ease.ts","ng://svg-progressbar-lib/lib/svg-progressbar-lib.component.ts","ng://svg-progressbar-lib/lib/svg-progressbar-lib.module.ts"],"names":["SvgProgressbarLibService","document","this","_SVG_NS","_DEGREES_TO_RADIANS","Math","PI","supportedSvg","createElementNS","createSVGRect","supportedPerfor","window","performance","now","prototype","getTimestamp","Date","getPathArc","currValue","total","radius","circleRadius","semicycle","value","max","min","maxAngle","angleScale","_getCoordinate","degress","radians","cos","sin","Injectable","Optional","type","Inject","args","DOCUMENT","SvgProgressbarLibDefaults","color","background","strokeWidth","responsive","rounded","clockwise","currVal","duration","animation","delay","SVG_PROGRESSBAR_LIB_CONFIG","InjectionToken","SVG_PROGRESSBAR_LIB_PROVIDER","provide","useValue","SvgProgressbarLibEase","linearEase","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","s","p","a","abs","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","SvgProgressbarLibComponent","_progressbarService","_progressbarEase","_renderer","_ngZone","_progressbarConfig","valueChanged","EventEmitter","_animateId","Object","defineProperty","_diameter","diameter","ngOnChanges","changes","_animateChange","previousValue","currentValue","_setPath","_getPathTransform","prev","curr","from","_clamp","valueDiff","self","runOutsideAngular","start","id","startTime","requestAnimationFrame","currentTime","emit","setTimeout","setAttribute","pathEle","nativeElement","Component","selector","template","Renderer2","NgZone","Output","ViewChild","Input","HostBinding","SvgProgressbarLibModule","NgModule","declarations","imports","CommonModule","providers","exports"],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n@Injectable()\nexport class SvgProgressbarLibService {\n  private _SVG_NS = 'http://www.w3.org/2000/svg';\n  private readonly _DEGREES_TO_RADIANS = Math.PI / 180;\n  public supportedSvg: boolean;\n  public supportedPerfor: boolean;\n\n  public constructor(@Optional() @Inject(DOCUMENT) private document: any) {\n    this.supportedSvg = !!(\n      this.document &&\n      this.document.createElementNS &&\n      this.document.createElementNS(this._SVG_NS, 'svg').createSVGRect\n    );\n    this.supportedPerfor =\n      typeof window !== 'undefined' &&\n      window.performance &&\n      window.performance.now &&\n      typeof window.performance.now() === 'number';\n  }\n\n  public getTimestamp(): number {\n    return this.supportedPerfor ? window.performance.now() : Date.now();\n  }\n\n  /**\n   * çæè·¯å¾\n   * @param currValue     è·¯å¾å½åå¼\n   * @param total         è·¯å¾æ»å¼\n   * @param radius        åå¾\n   * @param circleRadius  åé¨ååå¾\n   * @param semicycle     æ¯å¦åå\n   */\n  public getPathArc(\n    currValue: number,\n    total: number,\n    radius: number,\n    circleRadius: number,\n    semicycle: boolean = false\n  ): string {\n    const value = Math.max(0, Math.min(currValue || 0, total));\n    const maxAngle = semicycle ? 180 : 360;\n    const angleScale = total === 0 ? maxAngle : (value / total) * maxAngle;\n    const start = this._getCoordinate(radius, circleRadius, 0);\n    const end = this._getCoordinate(radius, circleRadius, angleScale);\n    const arcSweep = angleScale <= 180 ? 0 : 1;\n    return `M ${start} A ${circleRadius} ${circleRadius} 0 ${arcSweep} 1 ${end}`;\n  }\n\n  /**\n   * è·åè·¯å¾èµ·å§åç»æåæ ç¹\n   * @param radius        åå¾\n   * @param circleRadius  åé¨ååå¾\n   * @param degress       å½åè§åº¦å¼\n   */\n  private _getCoordinate(radius: number, circleRadius: number, degress: number): string {\n    const radians = this._DEGREES_TO_RADIANS * (degress - 90);\n    const cx = radius + circleRadius * Math.cos(radians);\n    const cy = radius + circleRadius * Math.sin(radians);\n    return cx + ' ' + cy;\n  }\n}\n","import { InjectionToken, ValueProvider } from '@angular/core';\n\nexport interface SvgProgressbarLibConfig {\n  radius: number; // åå¾\n  strokeWidth: number; // å®½åº¦\n  color: string; // è·¯å¾é¢è²\n  background: string; // èæ¯è²å½©\n  semicycle: boolean; // æ¯å¦åå\n  responsive: boolean; // æ¯å¦èªéåº\n  rounded: boolean; // æ¯å¦åè§\n  clockwise: boolean; // æ¯å¦é¡ºæ¶é\n  currVal: number; // å½åè¿åº¦æ¡å¼\n  total: number; // è¿åº¦æ¡ç»æå¼\n  duration: number; // å¨ç»æç»­æ¶é´(ms)\n  animation: string; // ç¼å¨å½æ°\n  delay: number; // å»¶è¿æ¶é´\n}\n\nexport const SvgProgressbarLibDefaults: SvgProgressbarLibConfig = {\n  radius: 100,\n  semicycle: false,\n  color: '#666699',\n  background: '#cccccc',\n  strokeWidth: 10,\n  responsive: false,\n  rounded: false,\n  clockwise: false,\n  currVal: 60,\n  total: 360,\n  duration: 3000,\n  animation: 'linearEase',\n  delay: 0\n};\n\nexport const SVG_PROGRESSBAR_LIB_CONFIG = new InjectionToken<SvgProgressbarLibConfig>('SVG_PROGRESSBAR_LIB_CONFIG');\n\nexport const SVG_PROGRESSBAR_LIB_PROVIDER: ValueProvider = {\n  provide: SVG_PROGRESSBAR_LIB_CONFIG,\n  useValue: SvgProgressbarLibDefaults\n};\n","/* tslint:disable */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SvgProgressbarLibEase {\n  // t: å½åæ¶é´\n  // b: å±æ§å½åå¼\n  // c: å¼ååé\n  // d: ååæ»æ¶é´\n  linearEase(t: number, b: number, c: number, d: number): number {\n    return (c * t) / d + b;\n  }\n\n  easeInQuad(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t + b;\n  }\n\n  easeOutQuad(t: number, b: number, c: number, d: number): number {\n    return -c * (t /= d) * (t - 2) + b;\n  }\n\n  easeInOutQuad(t: number, b: number, c: number, d: number): number {\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t + b;\n    }\n\n    return (-c / 2) * (--t * (t - 2) - 1) + b;\n  }\n\n  easeInCubic(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t + b;\n  }\n\n  easeOutCubic(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  easeInOutCubic(t: number, b: number, c: number, d: number): number {\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t + 2) + b;\n  }\n\n  easeInQuart(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  easeOutQuart(t: number, b: number, c: number, d: number): number {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  easeInOutQuart(t: number, b: number, c: number, d: number): number {\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t + b;\n    }\n\n    return (-c / 2) * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  easeInQuint(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  easeOutQuint(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  easeInOutQuint(t: number, b: number, c: number, d: number): number {\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  easeInSine(t: number, b: number, c: number, d: number): number {\n    return -c * Math.cos((t / d) * (Math.PI / 2)) + c + b;\n  }\n\n  easeOutSine(t: number, b: number, c: number, d: number): number {\n    return c * Math.sin((t / d) * (Math.PI / 2)) + b;\n  }\n\n  easeInOutSine(t: number, b: number, c: number, d: number): number {\n    return (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n  }\n\n  easeInExpo(t: number, b: number, c: number, d: number): number {\n    return t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  easeOutExpo(t: number, b: number, c: number, d: number): number {\n    return t == d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;\n  }\n\n  easeInOutExpo(t: number, b: number, c: number, d: number): number {\n    if (t == 0) {\n      return b;\n    }\n\n    if (t == d) {\n      return b + c;\n    }\n\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return (c / 2) * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  easeInCirc(t: number, b: number, c: number, d: number): number {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  easeOutCirc(t: number, b: number, c: number, d: number): number {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  easeInOutCirc(t: number, b: number, c: number, d: number): number {\n    if ((t /= d / 2) < 1) {\n      return (-c / 2) * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  easeInElastic(t: number, b: number, c: number, d: number): number {\n    let s = 1.70158;\n    let p = d * 0.3;\n    let a = c;\n\n    if (t == 0) {\n      return b;\n    }\n\n    if ((t /= d) == 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return -(a * Math.pow(2, 10 * t--) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n  }\n\n  easeOutElastic(t: number, b: number, c: number, d: number): number {\n    let s = 1.70158;\n    let p = d * 0.3;\n    let a = c;\n\n    if (t == 0) {\n      return b;\n    }\n\n    if ((t /= d) == 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\n  }\n\n  easeInOutElastic(t: number, b: number, c: number, d: number): number {\n    let s = 1.70158;\n    let p = d * (0.3 * 1.5);\n    let a = c;\n\n    if (t == 0) {\n      return b;\n    }\n\n    if ((t /= d / 2) == 2) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    if (t < 1) {\n      return (\n        -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b\n      );\n    }\n\n    return (\n      a * Math.pow(2, -10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) * 0.5 + c + b\n    );\n  }\n\n  easeInBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  easeOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  easeInOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n\n  easeInBounce(t: number, b: number, c: number, d: number): number {\n    return c - this.easeOutBounce(d - t, 0, c, d) + b;\n  }\n\n  easeOutBounce(t: number, b: number, c: number, d: number): number {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    }\n\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n\n  easeInOutBounce(t: number, b: number, c: number, d: number): number {\n    if (t < d / 2) {\n      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n}\n\n/**\n * TERMS OF USE - EASING EQUATIONS\n * Open source under the BSD License.\n\n * Copyright Â© 2001 Robert Penner\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this list of conditions\n * and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\n * and the following disclaimer in the documentation and/or other materials provided with the\n * distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\n * products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n","/* tslint:disable variable-name */\n\nimport {\n  Component,\n  Inject,\n  OnChanges,\n  Input,\n  HostBinding,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  SimpleChanges,\n  NgZone,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { SvgProgressbarLibService } from './svg-progressbar-lib.service';\nimport { SvgProgressbarLibConfig, SVG_PROGRESSBAR_LIB_CONFIG } from './svg-progressbar-lib.config';\nimport { SvgProgressbarLibEase } from './svg-progressbar-lib.ease';\n\n@Component({\n  selector: 'nlq-svg-progressbar-lib',\n  templateUrl: './svg-progressbar-lib.component.html',\n  styleUrls: ['./svg-progressbar-lib.component.scss']\n})\nexport class SvgProgressbarLibComponent implements OnChanges {\n  @Output() public valueChanged: EventEmitter<number> = new EventEmitter<number>();\n  @ViewChild('path') private pathEle: ElementRef<SVGPathElement>;\n  @Input() public radius: number = this._progressbarConfig.radius;\n  @Input() public semicycle: boolean = this._progressbarConfig.semicycle;\n  @Input() public color: string = this._progressbarConfig.color;\n  @Input() public background: string = this._progressbarConfig.background;\n  @Input() public strokeWidth: number = this._progressbarConfig.strokeWidth;\n  @Input() public rounded: boolean = this._progressbarConfig.rounded;\n  @Input() public currVal: number = this._progressbarConfig.currVal;\n  @Input() public total: number = this._progressbarConfig.total;\n  @Input() public duration: number = this._progressbarConfig.duration;\n  @Input() public animation: string = this._progressbarConfig.animation;\n  @Input() public delay: number = this._progressbarConfig.delay;\n  @Input() public clockwise: boolean = this._progressbarConfig.clockwise;\n  @Input()\n  @HostBinding('class.responsive')\n  public responsive: boolean = this._progressbarConfig.responsive;\n\n  @HostBinding('attr.role')\n  public get _role(): string {\n    return 'svg-progressbar';\n  }\n\n  @HostBinding('style.width')\n  public get _width(): string {\n    return this.responsive ? '' : `${this._diameter}px`;\n  }\n\n  @HostBinding('style.height')\n  public get _height(): string {\n    if (!this.responsive) {\n      return `${this.semicycle ? this.radius : this._diameter}px`;\n    }\n  }\n\n  @HostBinding('style.padding-bottom')\n  public get _paddingBottom(): string {\n    if (this.responsive) {\n      return this.semicycle ? '50%' : '100%';\n    }\n  }\n\n  public get _viewbox(): string {\n    const diameter = this._diameter;\n    return `0 0 ${diameter} ${this.semicycle ? this.radius : diameter}`;\n  }\n\n  private get _diameter(): number {\n    return this.radius * 2;\n  }\n\n  private _animateId: number = 0;\n\n  public constructor(\n    private _progressbarService: SvgProgressbarLibService,\n    private _progressbarEase: SvgProgressbarLibEase,\n    private _renderer: Renderer2,\n    private _ngZone: NgZone,\n    @Inject(SVG_PROGRESSBAR_LIB_CONFIG) private _progressbarConfig: SvgProgressbarLibConfig\n  ) {}\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.currVal) {\n      this._animateChange(changes.currVal.previousValue, changes.currVal.currentValue);\n    } else {\n      this._setPath(this.currVal);\n    }\n  }\n\n  /** è·åPathåç´ çTransformè½¬æ¢ */\n  public _getPathTransform(): string {\n    if (this.semicycle) {\n      return this.clockwise\n        ? `translate(0, ${this._diameter}) rotate(-90)`\n        : `translate(${this._diameter}, ${this._diameter}) rotate(90) scale(-1,1)`;\n    } else if (!this.clockwise) {\n      return `scale(-1, 1) translate(${-this._diameter} 0)`;\n    }\n  }\n\n  /** éè¿ç¼å¨å½æ°æ´æ°pathåç´ è·¯å¾ */\n  private _animateChange(prev: number, curr: number): void {\n    if (typeof prev !== 'number') {\n      prev = 0;\n    }\n    const from = this._clamp(prev);\n    const to = this._clamp(curr);\n    const valueDiff = to - from;\n    const self = this;\n\n    this._ngZone.runOutsideAngular(() => {\n      const start = () => {\n        const id = ++self._animateId;\n        const startTime = self._progressbarService.getTimestamp();\n\n        requestAnimationFrame(function animation() {\n          const currentTime = Math.min(self._progressbarService.getTimestamp() - startTime, self.duration);\n          const value = self._progressbarEase[self.animation](currentTime, from, valueDiff, self.duration);\n\n          self._setPath(value);\n          self.valueChanged.emit(value);\n\n          if (id === self._animateId && currentTime < self.duration) {\n            requestAnimationFrame(animation);\n          }\n        });\n      };\n\n      if (self.delay > 0) {\n        setTimeout(start, self.delay);\n      } else {\n        start();\n      }\n    });\n  }\n\n  private _clamp(value: number): number {\n    return Math.max(0, Math.min(value || 0, this.total));\n  }\n\n  private _setPath(value: number): void {\n    const d = this._progressbarService.getPathArc(\n      value,\n      this.total,\n      this.radius,\n      this.radius - this.strokeWidth / 2,\n      this.semicycle\n    );\n    this._renderer.setAttribute(this.pathEle.nativeElement, 'd', d);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SvgProgressbarLibComponent } from './svg-progressbar-lib.component';\nimport { SvgProgressbarLibService } from './svg-progressbar-lib.service';\nimport { SVG_PROGRESSBAR_LIB_PROVIDER } from './svg-progressbar-lib.config';\nimport { SvgProgressbarLibEase } from './svg-progressbar-lib.ease';\n\n@NgModule({\n  declarations: [SvgProgressbarLibComponent],\n  imports: [CommonModule],\n  providers: [SvgProgressbarLibService, SVG_PROGRESSBAR_LIB_PROVIDER, SvgProgressbarLibEase],\n  exports: [SvgProgressbarLibComponent]\n})\nexport class SvgProgressbarLibModule {}\n"]}